//@formatter:off
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package me.him188.ani.app.torrent.anitorrent.binding;

public class torrent_info_t {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected torrent_info_t(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(torrent_info_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(torrent_info_t obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        anitorrentJNI.delete_torrent_info_t(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public torrent_info_t() {
    this(anitorrentJNI.new_torrent_info_t(), true);
  }

  public void setName(String value) {
    anitorrentJNI.torrent_info_t_name_set(swigCPtr, this, value);
  }

  public String getName() {
    return anitorrentJNI.torrent_info_t_name_get(swigCPtr, this);
  }

  public void setTotal_size(long value) {
    anitorrentJNI.torrent_info_t_total_size_set(swigCPtr, this, value);
  }

  public long getTotal_size() {
    return anitorrentJNI.torrent_info_t_total_size_get(swigCPtr, this);
  }

  public void setNum_pieces(int value) {
    anitorrentJNI.torrent_info_t_num_pieces_set(swigCPtr, this, value);
  }

  public int getNum_pieces() {
    return anitorrentJNI.torrent_info_t_num_pieces_get(swigCPtr, this);
  }

  public void setPiece_length(int value) {
    anitorrentJNI.torrent_info_t_piece_length_set(swigCPtr, this, value);
  }

  public int getPiece_length() {
    return anitorrentJNI.torrent_info_t_piece_length_get(swigCPtr, this);
  }

  public void setLast_piece_size(int value) {
    anitorrentJNI.torrent_info_t_last_piece_size_set(swigCPtr, this, value);
  }

  public int getLast_piece_size() {
    return anitorrentJNI.torrent_info_t_last_piece_size_get(swigCPtr, this);
  }

  public void setFiles(SWIGTYPE_p_std__vectorT_anilt__torrent_file_t_t value) {
    anitorrentJNI.torrent_info_t_files_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_anilt__torrent_file_t_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_anilt__torrent_file_t_t getFiles() {
    long cPtr = anitorrentJNI.torrent_info_t_files_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_anilt__torrent_file_t_t(cPtr, false);
  }

  public long file_count() {
    return anitorrentJNI.torrent_info_t_file_count(swigCPtr, this);
  }

  public torrent_file_t file_at(int index) {
    long cPtr = anitorrentJNI.torrent_info_t_file_at(swigCPtr, this, index);
    return (cPtr == 0) ? null : new torrent_file_t(cPtr, false);
  }

}

//@formatter:on