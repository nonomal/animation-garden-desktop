//@formatter:off
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package me.him188.ani.app.torrent.anitorrent.binding;

public class session_settings_t {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected session_settings_t(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(session_settings_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(session_settings_t obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        anitorrentJNI.delete_session_settings_t(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setDownload_rate_limit(int value) {
    anitorrentJNI.session_settings_t_download_rate_limit_set(swigCPtr, this, value);
  }

  public int getDownload_rate_limit() {
    return anitorrentJNI.session_settings_t_download_rate_limit_get(swigCPtr, this);
  }

  public void setUpload_rate_limit(int value) {
    anitorrentJNI.session_settings_t_upload_rate_limit_set(swigCPtr, this, value);
  }

  public int getUpload_rate_limit() {
    return anitorrentJNI.session_settings_t_upload_rate_limit_get(swigCPtr, this);
  }

  public void setActive_seeds(int value) {
    anitorrentJNI.session_settings_t_active_seeds_set(swigCPtr, this, value);
  }

  public int getActive_seeds() {
    return anitorrentJNI.session_settings_t_active_seeds_get(swigCPtr, this);
  }

  public void setActive_downloads(int value) {
    anitorrentJNI.session_settings_t_active_downloads_set(swigCPtr, this, value);
  }

  public int getActive_downloads() {
    return anitorrentJNI.session_settings_t_active_downloads_get(swigCPtr, this);
  }

  public void setUser_agent(String value) {
    anitorrentJNI.session_settings_t_user_agent_set(swigCPtr, this, value);
  }

  public String getUser_agent() {
    return anitorrentJNI.session_settings_t_user_agent_get(swigCPtr, this);
  }

  public void setPeer_fingerprint(String value) {
    anitorrentJNI.session_settings_t_peer_fingerprint_set(swigCPtr, this, value);
  }

  public String getPeer_fingerprint() {
    return anitorrentJNI.session_settings_t_peer_fingerprint_get(swigCPtr, this);
  }

  public void setDht_bootstrap_nodes_extra(SWIGTYPE_p_std__setT_std__string_t value) {
    anitorrentJNI.session_settings_t_dht_bootstrap_nodes_extra_set(swigCPtr, this, SWIGTYPE_p_std__setT_std__string_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__setT_std__string_t getDht_bootstrap_nodes_extra() {
    long cPtr = anitorrentJNI.session_settings_t_dht_bootstrap_nodes_extra_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__setT_std__string_t(cPtr, false);
  }

  public void dht_bootstrap_nodes_extra_add(String node) {
    anitorrentJNI.session_settings_t_dht_bootstrap_nodes_extra_add(swigCPtr, this, node);
  }

  public void setTrackers_extra(String value) {
    anitorrentJNI.session_settings_t_trackers_extra_set(swigCPtr, this, value);
  }

  public String getTrackers_extra() {
    return anitorrentJNI.session_settings_t_trackers_extra_get(swigCPtr, this);
  }

  public void setConnections_limit(int value) {
    anitorrentJNI.session_settings_t_connections_limit_set(swigCPtr, this, value);
  }

  public int getConnections_limit() {
    return anitorrentJNI.session_settings_t_connections_limit_get(swigCPtr, this);
  }

  public void setMax_peerlist_size(int value) {
    anitorrentJNI.session_settings_t_max_peerlist_size_set(swigCPtr, this, value);
  }

  public int getMax_peerlist_size() {
    return anitorrentJNI.session_settings_t_max_peerlist_size_get(swigCPtr, this);
  }

  public void setShare_ratio_limit(int value) {
    anitorrentJNI.session_settings_t_share_ratio_limit_set(swigCPtr, this, value);
  }

  public int getShare_ratio_limit() {
    return anitorrentJNI.session_settings_t_share_ratio_limit_get(swigCPtr, this);
  }

  public void setHandshake_client_version(String value) {
    anitorrentJNI.session_settings_t_handshake_client_version_set(swigCPtr, this, value);
  }

  public String getHandshake_client_version() {
    return anitorrentJNI.session_settings_t_handshake_client_version_get(swigCPtr, this);
  }

  public session_settings_t() {
    this(anitorrentJNI.new_session_settings_t(), true);
  }

}

//@formatter:on