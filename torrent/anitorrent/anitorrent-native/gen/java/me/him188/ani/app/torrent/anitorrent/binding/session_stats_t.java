//@formatter:off
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package me.him188.ani.app.torrent.anitorrent.binding;

public class session_stats_t {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected session_stats_t(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(session_stats_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(session_stats_t obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        anitorrentJNI.delete_session_stats_t(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setDownload_payload_rate(int value) {
    anitorrentJNI.session_stats_t_download_payload_rate_set(swigCPtr, this, value);
  }

  public int getDownload_payload_rate() {
    return anitorrentJNI.session_stats_t_download_payload_rate_get(swigCPtr, this);
  }

  public void setTotal_uploaded_bytes(int value) {
    anitorrentJNI.session_stats_t_total_uploaded_bytes_set(swigCPtr, this, value);
  }

  public int getTotal_uploaded_bytes() {
    return anitorrentJNI.session_stats_t_total_uploaded_bytes_get(swigCPtr, this);
  }

  public void setUpload_payload_rate(int value) {
    anitorrentJNI.session_stats_t_upload_payload_rate_set(swigCPtr, this, value);
  }

  public int getUpload_payload_rate() {
    return anitorrentJNI.session_stats_t_upload_payload_rate_get(swigCPtr, this);
  }

  public void setTotal_downloaded_bytes(int value) {
    anitorrentJNI.session_stats_t_total_downloaded_bytes_set(swigCPtr, this, value);
  }

  public int getTotal_downloaded_bytes() {
    return anitorrentJNI.session_stats_t_total_downloaded_bytes_get(swigCPtr, this);
  }

  public session_stats_t() {
    this(anitorrentJNI.new_session_stats_t(), true);
  }

}

//@formatter:on